// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/client/elastic.go
//
// Generated by this command:
//
//	mockgen -source ./internal/client/elastic.go -destination ./internal/client/elastic_mock.go -package client
//

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	esapi "github.com/elastic/go-elasticsearch/v8/esapi"
	gomock "go.uber.org/mock/gomock"
)

// MockElasticClient is a mock of ElasticClient interface.
type MockElasticClient struct {
	ctrl     *gomock.Controller
	recorder *MockElasticClientMockRecorder
}

// MockElasticClientMockRecorder is the mock recorder for MockElasticClient.
type MockElasticClientMockRecorder struct {
	mock *MockElasticClient
}

// NewMockElasticClient creates a new mock instance.
func NewMockElasticClient(ctrl *gomock.Controller) *MockElasticClient {
	mock := &MockElasticClient{ctrl: ctrl}
	mock.recorder = &MockElasticClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockElasticClient) EXPECT() *MockElasticClientMockRecorder {
	return m.recorder
}

// ExecRequest mocks base method.
func (m *MockElasticClient) ExecRequest(ctx context.Context, request esapi.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecRequest", ctx, request)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExecRequest indicates an expected call of ExecRequest.
func (mr *MockElasticClientMockRecorder) ExecRequest(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecRequest", reflect.TypeOf((*MockElasticClient)(nil).ExecRequest), ctx, request)
}
